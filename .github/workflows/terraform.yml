name: Terraform

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  terraform-actions:
    name: Workflow
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@master

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.6

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Comment on PR
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        plan: "terraform\n${{ steps.plan.outputs.stdout }}"
        script: |
          const CODE_BLOCK = '```';
          const output = `
          ### Terraform Format and Style üé®: \`${{ steps.fmt.outcome }}\`
          <details><summary>Output</summary>
          ${ CODE_BLOCK }
          # terraform fmt
          ${{ steps.fmt.ouputs.stdout }}
          ${ CODE_BLOCK }
          </details>

          ### Terraform Initialization ‚öôÔ∏è:  \`${{ steps.init.outcome }}\`
          <details><summary>Output</summary>
          ${ CODE_BLOCK }
          # terraform init
          ${{ steps.init.outputs.stderr }}
          ${ CODE_BLOCK }
          </details>

          ### Terraform Validation ü§ñ: \`${{ steps.validate.outcome }}\`
          <details><summary>Output</summary>
          ${ CODE_BLOCK }
          # terraform validate
          ${{ steps.validate.outputs.stderr }}
          ${ CODE_BLOCK }
          </details>

          ### Terraform Plan üìñ: \`${{ steps.plan.outcome }}\`
          <details><summary>Output</summary>
          ${ CODE_BLOCK }
          # terraform plan
          ${ process.env.PLAN }
          ${ CODE_BLOCK }
          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: 'End results'
      shell: bash
      run: |
        echo fmt
        test ${{ steps.fmt.outputs.exitcode }} -eq 0
        echo init
        test ${{ steps.init.outputs.exitcode }} -eq 0
        echo validate
        test ${{ steps.validate.outputs.exitcode }} -eq 0
